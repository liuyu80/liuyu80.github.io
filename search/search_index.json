{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"note/python/log/","title":"Log","text":"<p>\u5305\u62ec\u6211\u5728\u5185\u7684\u5927\u591a\u6570\u4eba\uff0c\u5f53\u7f16\u5199\u5c0f\u578b\u811a\u672c\u65f6\uff0c\u4e60\u60ef\u4f7f\u7528<code>print</code>\u6765debug\uff0c\u80a5\u80a0\u65b9\u4fbf\uff0c\u8fd9\u6ca1\u95ee\u9898\uff0c\u4f46\u968f\u7740\u4ee3\u7801\u4e0d\u65ad\u5b8c\u5584\uff0c\u65e5\u5fd7\u529f\u80fd\u4e00\u5b9a\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\uff0c\u6781\u5927\u7a0b\u5ea6\u65b9\u4fbf\u95ee\u9898\u6eaf\u6e90\u4ee5\u53ca\u7529\u9505\uff0c\u4e5f\u662f\u6bcf\u4e2a\u5de5\u7a0b\u5e08\u5fc5\u5907\u6280\u80fd</p> <p>Python\u81ea\u5e26\u7684<code>logging</code>\u6211\u4e2a\u4eba\u4e0d\u63a8\u4ecb\u4f7f\u7528\uff0c\u4e0d\u592aPythonic\uff0c\u800c\u5f00\u6e90\u7684<code>Loguru</code>\u5e93\u6210\u4e3a\u4f17\u591a\u5de5\u7a0b\u5e08\u53ca\u9879\u76ee\u4e2d\u9996\u9009\uff0c\u672c\u671f\u5c06\u540c\u65f6\u5bf9<code>logging</code>\u53ca<code>Loguru</code>\u8fdb\u884c\u4f7f\u7528\u5bf9\u6bd4\uff0c\u5e0c\u671b\u6709\u6240\u5e2e\u52a9\u3002</p>"},{"location":"note/python/log/#_1","title":"\u5feb\u901f\u793a\u4f8b","text":"<p>\u5728<code>logging</code>\u4e2d\uff0c\u9ed8\u8ba4\u7684\u65e5\u5fd7\u529f\u80fd\u8f93\u51fa\u7684\u4fe1\u606f\u8f83\u4e3a\u6709\u9650</p> Python<pre><code>import logging\n\nlogger = logging.getLogger(__name__) \n\ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\") \n\nif __name__ == \"__main__\": \n    main()\n</code></pre> <p>\u8f93\u51fa(logging\u9ed8\u8ba4\u65e5\u5fd7\u7b49\u7ea7\u4e3a<code>warning</code>\uff0c\u6545\u6b64\u5904\u672a\u8f93\u51fainfo\u4e0edebug\u7b49\u7ea7\u7684\u4fe1\u606f)</p> Bash<pre><code>WARNING:root:This is a warning message \nERROR:root:This is an error message\n</code></pre> <p>\u518d\u6765\u770b\u770b<code>loguru</code>\uff0c\u9ed8\u8ba4\u751f\u6210\u7684\u4fe1\u606f\u5c31\u8f83\u4e3a\u4e30\u5bcc\u4e86</p> Python<pre><code>from loguru import logger \ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\") \n\nif __name__ == \"__main__\": \n    main()\n</code></pre> <p></p> <p>\u63d0\u4f9b\u4e86\u6267\u884c\u65f6\u95f4\u3001\u7b49\u7ea7\u3001\u5728\u54ea\u4e2a\u51fd\u6570\u8c03\u7528\u3001\u5177\u4f53\u54ea\u4e00\u884c\u7b49\u4fe1\u606f</p>"},{"location":"note/python/log/#_2","title":"\u683c\u5f0f\u5316\u65e5\u5fd7","text":"<p>\u683c\u5f0f\u5316\u65e5\u5fd7\u5141\u8bb8\u6211\u4eec\u5411\u65e5\u5fd7\u6dfb\u52a0\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u65f6\u95f4\u6233\u3001\u65e5\u5fd7\u7ea7\u522b\u3001\u6a21\u5757\u540d\u79f0\u3001\u51fd\u6570\u540d\u79f0\u548c\u884c\u53f7</p> <p>\u5728<code>logging</code>\u4e2d\u4f7f\u7528<code>%</code>\u8fbe\u5230\u683c\u5f0f\u5316\u76ee\u7684</p> Python<pre><code>import logging \n# Create a logger and set the logging level \nlogging.basicConfig( level=logging.INFO, format=\"%(asctime)s | %(levelname)s | %(module)s:%(funcName)s:%(lineno)d - %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", ) \nlogger = logging.getLogger(__name__) \ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\")\n</code></pre> <p>\u8f93\u51fa</p> Bash<pre><code>2023-10-18 15:47:30 | INFO | tmp:&lt;module&gt;:186 - This is an info message \n2023-10-18 15:47:30 | WARNING | tmp:&lt;module&gt;:187 - This is a warning message \n2023-10-18 15:47:30 | ERROR | tmp:&lt;module&gt;:188 - This is an error message\n</code></pre> <p>\u800c<code>loguru</code>\u4f7f\u7528\u548cf-string\u76f8\u540c\u7684<code>{}</code>\u683c\u5f0f\uff0c\u66f4\u65b9\u4fbf</p> Python<pre><code>from loguru import logger \nlogger.add( sys.stdout, level=\"INFO\", format=\"{time:YYYY-MM-DD HH:mm:ss} | {level} | {module}:{function}:{line} - {message}\", )\n</code></pre>"},{"location":"note/python/log/#_3","title":"\u65e5\u5fd7\u4fdd\u5b58","text":"Python<pre><code>import logging \n\nlogging.basicConfig( level=logging.DEBUG, format=\"%(asctime)s | %(levelname)s | %(module)s:%(funcName)s:%(lineno)d - %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", handlers=[logging.FileHandler(filename=\"/your/save/path/info.log\", level=logging.INFO), logging.StreamHandler(level=logging.DEBUG), ], ) \n\nlogger = logging.getLogger(__name__) def main(): logging.debug(\"This is a debug message\") logging.info(\"This is an info message\") \n\nlogging.warning(\"This is a warning message\") logging.error(\"This is an error message\") if __name__ == \"__main__\": main()\n</code></pre> <p>\u4f46\u662f\u5728<code>loguru</code>\u4e2d\uff0c\u53ea\u9700\u8981\u4f7f\u7528<code>add</code>\u65b9\u6cd5\u5373\u53ef\u8fbe\u5230\u76ee\u7684</p> Python<pre><code>from loguru import logger \n\nlogger.add( 'info.log', format=\"{time:YYYY-MM-DD HH:mm:ss} | {level} | {module}:{function}:{line} - {message}\", level=\"INFO\", ) \n\ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\") \n\nif __name__ == \"__main__\": \n    main()\n</code></pre>"},{"location":"note/python/log/#_4","title":"\u65e5\u5fd7\u8f6e\u6362","text":"<p>\u65e5\u5fd7\u8f6e\u6362\u6307\u901a\u8fc7\u5b9a\u671f\u521b\u5efa\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6\u5e76\u5f52\u6863\u6216\u5220\u9664\u65e7\u7684\u65e5\u5fd7\u6765\u9632\u6b62\u65e5\u5fd7\u53d8\u5f97\u8fc7\u5927</p> <p>\u5728<code>logging</code>\u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u540d\u4e3a <code>TimedRotatingFileHandler</code> \u7684\u9644\u52a0\u7c7b\uff0c\u4ee5\u4e0b\u4ee3\u7801\u793a\u4f8b\u4ee3\u8868\u6bcf\u5468\u5207\u6362\u5230\u4e00\u4e2a\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6 ( when=\u201cWO\u201d, interval=1 )\uff0c\u5e76\u4fdd\u7559\u6700\u591a 4 \u5468\u7684\u65e5\u5fd7\u6587\u4ef6 ( backupCount=4 )</p> Python<pre><code>import logging \nfrom logging.handlers import TimedRotatingFileHandler \n\nlogger = logging.getLogger(__name__) \nlogger.setLevel(logging.DEBUG) \n# Create a formatter with the desired log format \n\nformatter = logging.Formatter( \"%(asctime)s | %(levelname)-8s | %(module)s:%(funcName)s:%(lineno)d - %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", ) \nfile_handler = TimedRotatingFileHandler( filename=\"debug2.log\", when=\"WO\", interval=1, backupCount=4 ) \nfile_handler.setLevel(logging.INFO) \nfile_handler.setFormatter(formatter) \nlogger.addHandler(file_handler) \n\ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\") \n\nif __name__ == \"__main__\": \n    main()\n</code></pre> <p>\u5728<code>loguru</code>\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>rotation</code> \u548c <code>retention</code> \u53c2\u6570\u6dfb\u52a0\u5230 <code>add</code> \u65b9\u6cd5\u6765\u8fbe\u5230\u76ee\u7684\uff0c\u5982\u4e0b\u793a\u4f8b\uff0c\u540c\u6837\u80a5\u80a0\u65b9\u4fbf</p> Python<pre><code>from loguru import logger\n\nlogger.add(\"debug.log\", level=\"INFO\", rotation=\"1 week\", retention=\"4 weeks\") \n\ndef main(): \n    logger.debug(\"This is a debug message\") \n    logger.info(\"This is an info message\") \n    logger.warning(\"This is a warning message\") \n    logger.error(\"This is an error message\") \n\nif __name__ == \"__main__\": \n    main()\n</code></pre>"},{"location":"note/python/log/#_5","title":"\u65e5\u5fd7\u7b5b\u9009","text":"<p>\u65e5\u5fd7\u7b5b\u9009\u6307\u6839\u636e\u7279\u5b9a\u6761\u4ef6\u6709\u9009\u62e9\u7684\u63a7\u5236\u5e94\u8f93\u51fa\u4e0e\u4fdd\u5b58\u54ea\u4e9b\u65e5\u5fd7\u4fe1\u606f</p> <p>\u5728<code>logging</code>\u4e2d\uff0c\u5b9e\u73b0\u8be5\u529f\u80fd\u9700\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u65e5\u5fd7\u8fc7\u6ee4\u5668\u7c7b</p> Python<pre><code>import logging\n\nlogging.basicConfig( filename=\"test.log\", format=\"%(asctime)s | %(levelname)-8s | %(module)s:%(funcName)s:%(lineno)d - %(message)s\", level=logging.INFO, ) \n\nclass CustomFilter(logging.Filter): \n\ndef filter(self, record):\n    return \"Cai Xukong\" in record.msg \n# Create a custom logging filter \ncustom_filter = CustomFilter() \n# Get the root logger and add the custom filter to it \nlogger = logging.getLogger()\nlogger.addFilter(custom_filter)\n\ndef main(): \n    logger.info(\"Hello Cai Xukong\") \n    logger.info(\"Bye Cai Xukong\") \nif __name__ == \"__main__\": \n    main()\n</code></pre> <p>\u5728<code>loguru</code>\u4e2d\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528<code>lambda</code>\u51fd\u6570\u6765\u8fc7\u6ee4\u65e5\u5fd7</p> Python<pre><code>from loguru import logger\n\nlogger.add(\"test.log\", filter=lambda x: \"Cai Xukong\" in x[\"message\"], level=\"INFO\")\ndef main(): \n    logger.info(\"Hello Cai Xukong\") \n    logger.info(\"Bye Cai Xukong\") \nif __name__ == \"__main__\": \n    main()\n</code></pre>"},{"location":"note/python/log/#_6","title":"\u6355\u83b7\u5f02\u5e38","text":"<p>\u5728<code>logging</code>\u4e2d\u6355\u83b7\u5f02\u5e38\u8f83\u4e3a\u4e0d\u4fbf\u4e14\u96be\u4ee5\u8c03\u8bd5\uff0c\u5982</p> Python<pre><code>import logging \n\nlogging.basicConfig( level=logging.DEBUG, format=\"%(asctime)s | %(levelname)s | %(module)s:%(funcName)s:%(lineno)d - %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", ) \n\ndef division(a, b): \n    return a / b \n\ndef nested(c): \n    try: \n        division(1, c) \n    except ZeroDivisionError: \n        logging.exception(\"ZeroDivisionError\") \n\nif __name__ == \"__main__\": \n    nested(0)\n</code></pre> Python<pre><code>Traceback (most recent call last): File \"logging_example.py\", line 16, in nested division(1, c) File \"logging_example.py\", line 11, in division return a / b ZeroDivisionError: division by zero\n</code></pre> <p>\u4e0a\u9762\u8f93\u51fa\u7684\u4fe1\u606f\u672a\u63d0\u4f9b\u89e6\u53d1\u5f02\u5e38\u7684<code>c</code>\u503c\u4fe1\u606f\uff0c\u800c\u5728<code>loguru</code>\u4e2d\uff0c\u901a\u8fc7\u663e\u793a\u5305\u542b\u53d8\u91cf\u503c\u7684\u5b8c\u6574\u5806\u6808\u8ddf\u8e2a\u6765\u65b9\u4fbf\u7528\u6237\u8bc6\u522b</p> Python<pre><code>from loguru import logger\n\ndef division(a, b): \n    return a / b \n\ndef nested(c): \n    try: \n        division(1, c)\n    except ZeroDivisionError:\n        logger.exception(\"ZeroDivisionError\") \n\nif __name__ == \"__main__\": \n    nested(0)\n</code></pre> <p></p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c<code>loguru</code>\u4e2d\u7684<code>catch</code>\u88c5\u9970\u5668\u5141\u8bb8\u7528\u6237\u6355\u83b7\u51fd\u6570\u5185\u4efb\u4f55\u9519\u8bef\uff0c\u4e14\u8fd8\u4f1a\u6807\u8bc6\u53d1\u751f\u9519\u8bef\u7684\u7ebf\u7a0b</p> Python<pre><code>from loguru import logger \n\ndef division(a, b): \n    return a / b \n\n@logger.catch \ndef nested(c): \n    division(1, c) \n\nif __name__ == \"__main__\": \n    nested(0)\n</code></pre> <p></p> <p>OK\uff0c\u4f5c\u4e3a\u666e\u901a\u73a9\u5bb6\u4ee5\u4e0a\u529f\u80fd\u8db3\u4ee5\u6ee1\u8db3\u65e5\u5e38\u65e5\u5fd7\u9700\u6c42\uff0c\u901a\u8fc7\u5bf9\u6bd4<code>logging</code>\u4e0e<code>loguru</code>\u5e94\u8be5\u8ba9\u5927\u5bb6\u6709\u4e86\u76f4\u89c2\u611f\u53d7\uff0c\u54e6\u5bf9\u4e86\uff0c<code>loguru</code>\u5982\u4f55\u5b89\u88c5\uff1f</p> Bash<pre><code>pip install loguru\n</code></pre>"}]}